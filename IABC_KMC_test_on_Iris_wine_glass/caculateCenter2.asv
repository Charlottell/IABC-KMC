function [newCenter,class,classCounterDistance]=caculateCenter2(centerNum,x,datacolumn,datarow,center,class,classCounterDistance)
%************计算新的中心*******************%
kindNum=linspace(0,0,centerNum);%代表的是每一类的样本的个数
sum=zeros(datarow,centerNum);
newCenter=zeros(datarow,centerNum);


%   for i=1:datacolumn
%     for j=1:centerNum
%        distancedata(j,i)=pdist([x(:,i),center(:,j)]');
%   %   distancedata(j,i)=(x(:,i)-center(:,j))'*(x(:,i)-center(:,j));%计算各第i点到就各个中心的距离
%     end
%   temp=find(distancedata(:,i)==min(distancedata(:,i)));%9.17 之所以这么写是因为怕出现如x=[1,1,3],find(x==min(x))会返回两个值而不符合实际情况，
%   %所以现将其以数组形式存储起来，再用下面的t=temp(1,1)取第一个就可以了
%     t=temp(1,1);%i到第t个中心近
%     %**************9.17**************
%     %t就是这个点到所有聚类中心中距离最短的那个中心点所代表的的类，这里有三个中心点，如果t==2，表示i这个点到第二个中心点的距离最短，所以这个
%     %点也应该归属到第二类中，即t==2
%     class(i)=t;
%     classCounterDistance(i,:)=[min(distancedata(:,i)),t];%这个将这个i点对应从属于哪个类以及到这个类的聚类存储起来，
%     %这个是为了以后计算准则函数用的，就是把同类的距离都加起来
%     %**************9.17**************
%     
%     for j=1:centerNum
%         if t==j
%             sum(:,j)=sum(:,j)+x(:,i);
%             kindNum(j)=kindNum(j)+1;
%         end
%     end
%    
%    % distancedata(2,i)=(x(:,i)-center(:,2))'*(x(:,i)-center(:,2));%计算各个点到z2的距离
%   % if distancedata(1,i)<distancedata(2,i)
%    %  sum(:,1)=sum(:,1)+x(:,i);%kinddata记录属于z1的值
%     % kindNum(1)=kindNum(1)+1;%记录属于z1的个数
%   % else
%    %  sum(:,2)=sum(:,2)+x(:,i);%kinddata记录属于z2的值 
%    %  kindNum(2)=kindNum(2)+1;%记录属于z1的个数
%   % newCenter1=sum(:,1)./kindNum(1);%计算新的中心
%   %newCenter2=sum(:,2)./kindNum(2);
%   %newCenter=[newCenter1 newCenter2];%合并新的中心
%    end

 for j=1:centerNum
    newCenter(:,j)=sum(:,j)./kindNum(j);%计算新的中心
 end


